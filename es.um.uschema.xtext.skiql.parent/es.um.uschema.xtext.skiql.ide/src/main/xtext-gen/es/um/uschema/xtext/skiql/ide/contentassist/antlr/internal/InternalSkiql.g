/*
 * generated by Xtext 2.29.0
 */
grammar InternalSkiql;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package es.um.uschema.xtext.skiql.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package es.um.uschema.xtext.skiql.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import es.um.uschema.xtext.skiql.services.SkiqlGrammarAccess;

}
@parser::members {
	private SkiqlGrammarAccess grammarAccess;

	public void setGrammarAccess(SkiqlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSkiQLModel
entryRuleSkiQLModel
:
{ before(grammarAccess.getSkiQLModelRule()); }
	 ruleSkiQLModel
{ after(grammarAccess.getSkiQLModelRule()); } 
	 EOF 
;

// Rule SkiQLModel
ruleSkiQLModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSkiQLModelAccess().getGroup()); }
		(rule__SkiQLModel__Group__0)
		{ after(grammarAccess.getSkiQLModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuery
entryRuleQuery
:
{ before(grammarAccess.getQueryRule()); }
	 ruleQuery
{ after(grammarAccess.getQueryRule()); } 
	 EOF 
;

// Rule Query
ruleQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryAccess().getAlternatives()); }
		(rule__Query__Alternatives)
		{ after(grammarAccess.getQueryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityTypeQuery
entryRuleEntityTypeQuery
:
{ before(grammarAccess.getEntityTypeQueryRule()); }
	 ruleEntityTypeQuery
{ after(grammarAccess.getEntityTypeQueryRule()); } 
	 EOF 
;

// Rule EntityTypeQuery
ruleEntityTypeQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityTypeQueryAccess().getGroup()); }
		(rule__EntityTypeQuery__Group__0)
		{ after(grammarAccess.getEntityTypeQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationshipTypeQuery
entryRuleRelationshipTypeQuery
:
{ before(grammarAccess.getRelationshipTypeQueryRule()); }
	 ruleRelationshipTypeQuery
{ after(grammarAccess.getRelationshipTypeQueryRule()); } 
	 EOF 
;

// Rule RelationshipTypeQuery
ruleRelationshipTypeQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipTypeQueryAccess().getGroup()); }
		(rule__RelationshipTypeQuery__Group__0)
		{ after(grammarAccess.getRelationshipTypeQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnyQuery
entryRuleAnyQuery
:
{ before(grammarAccess.getAnyQueryRule()); }
	 ruleAnyQuery
{ after(grammarAccess.getAnyQueryRule()); } 
	 EOF 
;

// Rule AnyQuery
ruleAnyQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnyQueryAccess().getGroup()); }
		(rule__AnyQuery__Group__0)
		{ after(grammarAccess.getAnyQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getAlternatives()); }
		(rule__Operation__Alternatives)
		{ after(grammarAccess.getOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeysSpec
entryRuleKeysSpec
:
{ before(grammarAccess.getKeysSpecRule()); }
	 ruleKeysSpec
{ after(grammarAccess.getKeysSpecRule()); } 
	 EOF 
;

// Rule KeysSpec
ruleKeysSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeysSpecAccess().getGroup()); }
		(rule__KeysSpec__Group__0)
		{ after(grammarAccess.getKeysSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationshipTypeSpec
entryRuleRelationshipTypeSpec
:
{ before(grammarAccess.getRelationshipTypeSpecRule()); }
	 ruleRelationshipTypeSpec
{ after(grammarAccess.getRelationshipTypeSpecRule()); } 
	 EOF 
;

// Rule RelationshipTypeSpec
ruleRelationshipTypeSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipTypeSpecAccess().getGroup()); }
		(rule__RelationshipTypeSpec__Group__0)
		{ after(grammarAccess.getRelationshipTypeSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSchemaTypeSpec
entryRuleSchemaTypeSpec
:
{ before(grammarAccess.getSchemaTypeSpecRule()); }
	 ruleSchemaTypeSpec
{ after(grammarAccess.getSchemaTypeSpecRule()); } 
	 EOF 
;

// Rule SchemaTypeSpec
ruleSchemaTypeSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSchemaTypeSpecAccess().getGroup()); }
		(rule__SchemaTypeSpec__Group__0)
		{ after(grammarAccess.getSchemaTypeSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntitySpec
entryRuleEntitySpec
:
{ before(grammarAccess.getEntitySpecRule()); }
	 ruleEntitySpec
{ after(grammarAccess.getEntitySpecRule()); } 
	 EOF 
;

// Rule EntitySpec
ruleEntitySpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntitySpecAccess().getGroup()); }
		(rule__EntitySpec__Group__0)
		{ after(grammarAccess.getEntitySpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferenceEntitySpec
entryRuleReferenceEntitySpec
:
{ before(grammarAccess.getReferenceEntitySpecRule()); }
	 ruleReferenceEntitySpec
{ after(grammarAccess.getReferenceEntitySpecRule()); } 
	 EOF 
;

// Rule ReferenceEntitySpec
ruleReferenceEntitySpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceEntitySpecAccess().getGroup()); }
		(rule__ReferenceEntitySpec__Group__0)
		{ after(grammarAccess.getReferenceEntitySpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationshipQuery
entryRuleRelationshipQuery
:
{ before(grammarAccess.getRelationshipQueryRule()); }
	 ruleRelationshipQuery
{ after(grammarAccess.getRelationshipQueryRule()); } 
	 EOF 
;

// Rule RelationshipQuery
ruleRelationshipQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipQueryAccess().getGroup()); }
		(rule__RelationshipQuery__Group__0)
		{ after(grammarAccess.getRelationshipQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNestedRelationshipQuery
entryRuleNestedRelationshipQuery
:
{ before(grammarAccess.getNestedRelationshipQueryRule()); }
	 ruleNestedRelationshipQuery
{ after(grammarAccess.getNestedRelationshipQueryRule()); } 
	 EOF 
;

// Rule NestedRelationshipQuery
ruleNestedRelationshipQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNestedRelationshipQueryAccess().getGroup()); }
		(rule__NestedRelationshipQuery__Group__0)
		{ after(grammarAccess.getNestedRelationshipQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationshipSpec
entryRuleRelationshipSpec
:
{ before(grammarAccess.getRelationshipSpecRule()); }
	 ruleRelationshipSpec
{ after(grammarAccess.getRelationshipSpecRule()); } 
	 EOF 
;

// Rule RelationshipSpec
ruleRelationshipSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipSpecAccess().getGroup()); }
		(rule__RelationshipSpec__Group__0)
		{ after(grammarAccess.getRelationshipSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationTypeSpec
entryRuleRelationTypeSpec
:
{ before(grammarAccess.getRelationTypeSpecRule()); }
	 ruleRelationTypeSpec
{ after(grammarAccess.getRelationTypeSpecRule()); } 
	 EOF 
;

// Rule RelationTypeSpec
ruleRelationTypeSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationTypeSpecAccess().getAlternatives()); }
		(rule__RelationTypeSpec__Alternatives)
		{ after(grammarAccess.getRelationTypeSpecAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationSpec
entryRuleRelationSpec
:
{ before(grammarAccess.getRelationSpecRule()); }
	 ruleRelationSpec
{ after(grammarAccess.getRelationSpecRule()); } 
	 EOF 
;

// Rule RelationSpec
ruleRelationSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationSpecAccess().getGroup()); }
		(rule__RelationSpec__Group__0)
		{ after(grammarAccess.getRelationSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferenceSpec
entryRuleReferenceSpec
:
{ before(grammarAccess.getReferenceSpecRule()); }
	 ruleReferenceSpec
{ after(grammarAccess.getReferenceSpecRule()); } 
	 EOF 
;

// Rule ReferenceSpec
ruleReferenceSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceSpecAccess().getGroup()); }
		(rule__ReferenceSpec__Group__0)
		{ after(grammarAccess.getReferenceSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAggregationSpec
entryRuleAggregationSpec
:
{ before(grammarAccess.getAggregationSpecRule()); }
	 ruleAggregationSpec
{ after(grammarAccess.getAggregationSpecRule()); } 
	 EOF 
;

// Rule AggregationSpec
ruleAggregationSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAggregationSpecAccess().getGroup()); }
		(rule__AggregationSpec__Group__0)
		{ after(grammarAccess.getAggregationSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndirectRelationshipSpec
entryRuleIndirectRelationshipSpec
:
{ before(grammarAccess.getIndirectRelationshipSpecRule()); }
	 ruleIndirectRelationshipSpec
{ after(grammarAccess.getIndirectRelationshipSpecRule()); } 
	 EOF 
;

// Rule IndirectRelationshipSpec
ruleIndirectRelationshipSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndirectRelationshipSpecAccess().getGroup()); }
		(rule__IndirectRelationshipSpec__Group__0)
		{ after(grammarAccess.getIndirectRelationshipSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndirectRelationTypeSpec
entryRuleIndirectRelationTypeSpec
:
{ before(grammarAccess.getIndirectRelationTypeSpecRule()); }
	 ruleIndirectRelationTypeSpec
{ after(grammarAccess.getIndirectRelationTypeSpecRule()); } 
	 EOF 
;

// Rule IndirectRelationTypeSpec
ruleIndirectRelationTypeSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndirectRelationTypeSpecAccess().getAlternatives()); }
		(rule__IndirectRelationTypeSpec__Alternatives)
		{ after(grammarAccess.getIndirectRelationTypeSpecAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndirectReferenceSpec
entryRuleIndirectReferenceSpec
:
{ before(grammarAccess.getIndirectReferenceSpecRule()); }
	 ruleIndirectReferenceSpec
{ after(grammarAccess.getIndirectReferenceSpecRule()); } 
	 EOF 
;

// Rule IndirectReferenceSpec
ruleIndirectReferenceSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndirectReferenceSpecAccess().getGroup()); }
		(rule__IndirectReferenceSpec__Group__0)
		{ after(grammarAccess.getIndirectReferenceSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndirectAggregationSpec
entryRuleIndirectAggregationSpec
:
{ before(grammarAccess.getIndirectAggregationSpecRule()); }
	 ruleIndirectAggregationSpec
{ after(grammarAccess.getIndirectAggregationSpecRule()); } 
	 EOF 
;

// Rule IndirectAggregationSpec
ruleIndirectAggregationSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndirectAggregationSpecAccess().getGroup()); }
		(rule__IndirectAggregationSpec__Group__0)
		{ after(grammarAccess.getIndirectAggregationSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTargetExpression
entryRuleTargetExpression
:
{ before(grammarAccess.getTargetExpressionRule()); }
	 ruleTargetExpression
{ after(grammarAccess.getTargetExpressionRule()); } 
	 EOF 
;

// Rule TargetExpression
ruleTargetExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTargetExpressionAccess().getAlternatives()); }
		(rule__TargetExpression__Alternatives)
		{ after(grammarAccess.getTargetExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationshipExpression
entryRuleRelationshipExpression
:
{ before(grammarAccess.getRelationshipExpressionRule()); }
	 ruleRelationshipExpression
{ after(grammarAccess.getRelationshipExpressionRule()); } 
	 EOF 
;

// Rule RelationshipExpression
ruleRelationshipExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipExpressionAccess().getGroup()); }
		(rule__RelationshipExpression__Group__0)
		{ after(grammarAccess.getRelationshipExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityExpression
entryRuleEntityExpression
:
{ before(grammarAccess.getEntityExpressionRule()); }
	 ruleEntityExpression
{ after(grammarAccess.getEntityExpressionRule()); } 
	 EOF 
;

// Rule EntityExpression
ruleEntityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityExpressionAccess().getGroup()); }
		(rule__EntityExpression__Group__0)
		{ after(grammarAccess.getEntityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleToReferenceEntitySpec
entryRuleToReferenceEntitySpec
:
{ before(grammarAccess.getToReferenceEntitySpecRule()); }
	 ruleToReferenceEntitySpec
{ after(grammarAccess.getToReferenceEntitySpecRule()); } 
	 EOF 
;

// Rule ToReferenceEntitySpec
ruleToReferenceEntitySpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getToReferenceEntitySpecAccess().getGroup()); }
		(rule__ToReferenceEntitySpec__Group__0)
		{ after(grammarAccess.getToReferenceEntitySpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferenceVariationFilter
entryRuleReferenceVariationFilter
:
{ before(grammarAccess.getReferenceVariationFilterRule()); }
	 ruleReferenceVariationFilter
{ after(grammarAccess.getReferenceVariationFilterRule()); } 
	 EOF 
;

// Rule ReferenceVariationFilter
ruleReferenceVariationFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceVariationFilterAccess().getGroup()); }
		(rule__ReferenceVariationFilter__Group__0)
		{ after(grammarAccess.getReferenceVariationFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferencePropertySpec
entryRuleReferencePropertySpec
:
{ before(grammarAccess.getReferencePropertySpecRule()); }
	 ruleReferencePropertySpec
{ after(grammarAccess.getReferencePropertySpecRule()); } 
	 EOF 
;

// Rule ReferencePropertySpec
ruleReferencePropertySpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferencePropertySpecAccess().getGroup()); }
		(rule__ReferencePropertySpec__Group__0)
		{ after(grammarAccess.getReferencePropertySpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariationFilter
entryRuleVariationFilter
:
{ before(grammarAccess.getVariationFilterRule()); }
	 ruleVariationFilter
{ after(grammarAccess.getVariationFilterRule()); } 
	 EOF 
;

// Rule VariationFilter
ruleVariationFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariationFilterAccess().getGroup()); }
		(rule__VariationFilter__Group__0)
		{ after(grammarAccess.getVariationFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertySpec
entryRulePropertySpec
:
{ before(grammarAccess.getPropertySpecRule()); }
	 rulePropertySpec
{ after(grammarAccess.getPropertySpecRule()); } 
	 EOF 
;

// Rule PropertySpec
rulePropertySpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertySpecAccess().getGroup()); }
		(rule__PropertySpec__Group__0)
		{ after(grammarAccess.getPropertySpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveType
entryRulePrimitiveType
:
{ before(grammarAccess.getPrimitiveTypeRule()); }
	 rulePrimitiveType
{ after(grammarAccess.getPrimitiveTypeRule()); } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getGroup()); }
		(rule__PrimitiveType__Group__0)
		{ after(grammarAccess.getPrimitiveTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationshipType
entryRuleRelationshipType
:
{ before(grammarAccess.getRelationshipTypeRule()); }
	 ruleRelationshipType
{ after(grammarAccess.getRelationshipTypeRule()); } 
	 EOF 
;

// Rule RelationshipType
ruleRelationshipType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipTypeAccess().getGroup()); }
		(rule__RelationshipType__Group__0)
		{ after(grammarAccess.getRelationshipTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVersionHistory
entryRuleVersionHistory
:
{ before(grammarAccess.getVersionHistoryRule()); }
	 ruleVersionHistory
{ after(grammarAccess.getVersionHistoryRule()); } 
	 EOF 
;

// Rule VersionHistory
ruleVersionHistory 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVersionHistoryAccess().getAlternatives()); }
		(rule__VersionHistory__Alternatives)
		{ after(grammarAccess.getVersionHistoryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBeforeHistory
entryRuleBeforeHistory
:
{ before(grammarAccess.getBeforeHistoryRule()); }
	 ruleBeforeHistory
{ after(grammarAccess.getBeforeHistoryRule()); } 
	 EOF 
;

// Rule BeforeHistory
ruleBeforeHistory 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBeforeHistoryAccess().getGroup()); }
		(rule__BeforeHistory__Group__0)
		{ after(grammarAccess.getBeforeHistoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAfterHistory
entryRuleAfterHistory
:
{ before(grammarAccess.getAfterHistoryRule()); }
	 ruleAfterHistory
{ after(grammarAccess.getAfterHistoryRule()); } 
	 EOF 
;

// Rule AfterHistory
ruleAfterHistory 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAfterHistoryAccess().getGroup()); }
		(rule__AfterHistory__Group__0)
		{ after(grammarAccess.getAfterHistoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBetweenHistory
entryRuleBetweenHistory
:
{ before(grammarAccess.getBetweenHistoryRule()); }
	 ruleBetweenHistory
{ after(grammarAccess.getBetweenHistoryRule()); } 
	 EOF 
;

// Rule BetweenHistory
ruleBetweenHistory 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBetweenHistoryAccess().getGroup()); }
		(rule__BetweenHistory__Group__0)
		{ after(grammarAccess.getBetweenHistoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDateTime
entryRuleDateTime
:
{ before(grammarAccess.getDateTimeRule()); }
	 ruleDateTime
{ after(grammarAccess.getDateTimeRule()); } 
	 EOF 
;

// Rule DateTime
ruleDateTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateTimeAccess().getGroup()); }
		(rule__DateTime__Group__0)
		{ after(grammarAccess.getDateTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TypeEnum
ruleTypeEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeEnumAccess().getAlternatives()); }
		(rule__TypeEnum__Alternatives)
		{ after(grammarAccess.getTypeEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RelationshipTypeEnum
ruleRelationshipTypeEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipTypeEnumAccess().getAlternatives()); }
		(rule__RelationshipTypeEnum__Alternatives)
		{ after(grammarAccess.getRelationshipTypeEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getEntityTypeQueryParserRuleCall_0()); }
		ruleEntityTypeQuery
		{ after(grammarAccess.getQueryAccess().getEntityTypeQueryParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getQueryAccess().getRelationshipTypeQueryParserRuleCall_1()); }
		ruleRelationshipTypeQuery
		{ after(grammarAccess.getQueryAccess().getRelationshipTypeQueryParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getQueryAccess().getRelationshipQueryParserRuleCall_2()); }
		ruleRelationshipQuery
		{ after(grammarAccess.getQueryAccess().getRelationshipQueryParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getQueryAccess().getAnyQueryParserRuleCall_3()); }
		ruleAnyQuery
		{ after(grammarAccess.getQueryAccess().getAnyQueryParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getKeysSpecParserRuleCall_0()); }
		ruleKeysSpec
		{ after(grammarAccess.getOperationAccess().getKeysSpecParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getVersionHistoryParserRuleCall_1()); }
		ruleVersionHistory
		{ after(grammarAccess.getOperationAccess().getVersionHistoryParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeSpec__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipTypeSpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getRelationshipTypeSpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipTypeSpecAccess().getNameAsteriskKeyword_1_0_1()); }
		'*'
		{ after(grammarAccess.getRelationshipTypeSpecAccess().getNameAsteriskKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaTypeSpec__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaTypeSpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSchemaTypeSpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSchemaTypeSpecAccess().getNameAsteriskKeyword_1_0_1()); }
		'*'
		{ after(grammarAccess.getSchemaTypeSpecAccess().getNameAsteriskKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySpec__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitySpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEntitySpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntitySpecAccess().getNameAsteriskKeyword_1_0_1()); }
		'*'
		{ after(grammarAccess.getEntitySpecAccess().getNameAsteriskKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceEntitySpec__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceEntitySpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getReferenceEntitySpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getReferenceEntitySpecAccess().getNameAsteriskKeyword_1_0_1()); }
		'*'
		{ after(grammarAccess.getReferenceEntitySpecAccess().getNameAsteriskKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getReferenceEntitySpecAccess().getName_Keyword_1_0_2()); }
		'_'
		{ after(grammarAccess.getReferenceEntitySpecAccess().getName_Keyword_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipQueryAccess().getToAssignment_4_0()); }
		(rule__RelationshipQuery__ToAssignment_4_0)
		{ after(grammarAccess.getRelationshipQueryAccess().getToAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipQueryAccess().getToAssignment_4_1()); }
		(rule__RelationshipQuery__ToAssignment_4_1)
		{ after(grammarAccess.getRelationshipQueryAccess().getToAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Alternatives_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipQueryAccess().getToAssignment_5_1_0()); }
		(rule__RelationshipQuery__ToAssignment_5_1_0)
		{ after(grammarAccess.getRelationshipQueryAccess().getToAssignment_5_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipQueryAccess().getToAssignment_5_1_1()); }
		(rule__RelationshipQuery__ToAssignment_5_1_1)
		{ after(grammarAccess.getRelationshipQueryAccess().getToAssignment_5_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedRelationshipQueryAccess().getToAssignment_5_0()); }
		(rule__NestedRelationshipQuery__ToAssignment_5_0)
		{ after(grammarAccess.getNestedRelationshipQueryAccess().getToAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getNestedRelationshipQueryAccess().getToAssignment_5_1()); }
		(rule__NestedRelationshipQuery__ToAssignment_5_1)
		{ after(grammarAccess.getNestedRelationshipQueryAccess().getToAssignment_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Alternatives_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedRelationshipQueryAccess().getToAssignment_6_1_0()); }
		(rule__NestedRelationshipQuery__ToAssignment_6_1_0)
		{ after(grammarAccess.getNestedRelationshipQueryAccess().getToAssignment_6_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNestedRelationshipQueryAccess().getToAssignment_6_1_1()); }
		(rule__NestedRelationshipQuery__ToAssignment_6_1_1)
		{ after(grammarAccess.getNestedRelationshipQueryAccess().getToAssignment_6_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationTypeSpec__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationTypeSpecAccess().getRelationSpecParserRuleCall_0()); }
		ruleRelationSpec
		{ after(grammarAccess.getRelationTypeSpecAccess().getRelationSpecParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationTypeSpecAccess().getReferenceSpecParserRuleCall_1()); }
		ruleReferenceSpec
		{ after(grammarAccess.getRelationTypeSpecAccess().getReferenceSpecParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationTypeSpecAccess().getAggregationSpecParserRuleCall_2()); }
		ruleAggregationSpec
		{ after(grammarAccess.getRelationTypeSpecAccess().getAggregationSpecParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectRelationTypeSpec__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndirectRelationTypeSpecAccess().getIndirectReferenceSpecParserRuleCall_0()); }
		ruleIndirectReferenceSpec
		{ after(grammarAccess.getIndirectRelationTypeSpecAccess().getIndirectReferenceSpecParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getIndirectRelationTypeSpecAccess().getIndirectAggregationSpecParserRuleCall_1()); }
		ruleIndirectAggregationSpec
		{ after(grammarAccess.getIndirectRelationTypeSpecAccess().getIndirectAggregationSpecParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetExpressionAccess().getRelationshipExpressionParserRuleCall_0()); }
		ruleRelationshipExpression
		{ after(grammarAccess.getTargetExpressionAccess().getRelationshipExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTargetExpressionAccess().getEntityExpressionParserRuleCall_1()); }
		ruleEntityExpression
		{ after(grammarAccess.getTargetExpressionAccess().getEntityExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToReferenceEntitySpec__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getToReferenceEntitySpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getToReferenceEntitySpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getToReferenceEntitySpecAccess().getNameAsteriskKeyword_1_0_1()); }
		'*'
		{ after(grammarAccess.getToReferenceEntitySpecAccess().getNameAsteriskKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getToReferenceEntitySpecAccess().getName_Keyword_1_0_2()); }
		'_'
		{ after(grammarAccess.getToReferenceEntitySpecAccess().getName_Keyword_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceVariationFilterAccess().getLeftSquareBracketRightSquareBracketKeyword_1_0()); }
		'[]'
		{ after(grammarAccess.getReferenceVariationFilterAccess().getLeftSquareBracketRightSquareBracketKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getReferenceVariationFilterAccess().getGroup_1_1()); }
		(rule__ReferenceVariationFilter__Group_1_1__0)
		{ after(grammarAccess.getReferenceVariationFilterAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePropertySpec__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferencePropertySpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getReferencePropertySpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getReferencePropertySpecAccess().getNameAsteriskKeyword_1_0_1()); }
		'*'
		{ after(grammarAccess.getReferencePropertySpecAccess().getNameAsteriskKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariationFilterAccess().getLeftSquareBracketRightSquareBracketKeyword_1_0()); }
		'[]'
		{ after(grammarAccess.getVariationFilterAccess().getLeftSquareBracketRightSquareBracketKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariationFilterAccess().getGroup_1_1()); }
		(rule__VariationFilter__Group_1_1__0)
		{ after(grammarAccess.getVariationFilterAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySpec__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertySpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertySpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertySpecAccess().getNameAsteriskKeyword_1_0_1()); }
		'*'
		{ after(grammarAccess.getPropertySpecAccess().getNameAsteriskKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getRelationshipTypeParserRuleCall_1()); }
		ruleRelationshipType
		{ after(grammarAccess.getTypeAccess().getRelationshipTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__TargetEntityNameAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipTypeAccess().getTargetEntityNameIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getRelationshipTypeAccess().getTargetEntityNameIDTerminalRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipTypeAccess().getTargetEntityNameAsteriskKeyword_2_0_1()); }
		'*'
		{ after(grammarAccess.getRelationshipTypeAccess().getTargetEntityNameAsteriskKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionHistory__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVersionHistoryAccess().getBeforeHistoryParserRuleCall_0()); }
		ruleBeforeHistory
		{ after(grammarAccess.getVersionHistoryAccess().getBeforeHistoryParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVersionHistoryAccess().getAfterHistoryParserRuleCall_1()); }
		ruleAfterHistory
		{ after(grammarAccess.getVersionHistoryAccess().getAfterHistoryParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getVersionHistoryAccess().getBetweenHistoryParserRuleCall_2()); }
		ruleBetweenHistory
		{ after(grammarAccess.getVersionHistoryAccess().getBetweenHistoryParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeEnumAccess().getSTRINGEnumLiteralDeclaration_0()); }
		('string')
		{ after(grammarAccess.getTypeEnumAccess().getSTRINGEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeEnumAccess().getNUMBEREnumLiteralDeclaration_1()); }
		('number')
		{ after(grammarAccess.getTypeEnumAccess().getNUMBEREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeEnumAccess().getBOOLEANEnumLiteralDeclaration_2()); }
		('boolean')
		{ after(grammarAccess.getTypeEnumAccess().getBOOLEANEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipTypeEnumAccess().getRELATIONSHIPEnumLiteralDeclaration_0()); }
		('ANY')
		{ after(grammarAccess.getRelationshipTypeEnumAccess().getRELATIONSHIPEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipTypeEnumAccess().getREFERENCEEnumLiteralDeclaration_1()); }
		('REF')
		{ after(grammarAccess.getRelationshipTypeEnumAccess().getREFERENCEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipTypeEnumAccess().getAGGREGATIONEnumLiteralDeclaration_2()); }
		('AGGR')
		{ after(grammarAccess.getRelationshipTypeEnumAccess().getAGGREGATIONEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SkiQLModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkiQLModel__Group__0__Impl
	rule__SkiQLModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SkiQLModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkiQLModelAccess().getSkiQLModelAction_0()); }
	()
	{ after(grammarAccess.getSkiQLModelAccess().getSkiQLModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SkiQLModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkiQLModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SkiQLModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkiQLModelAccess().getQueryAssignment_1()); }
	(rule__SkiQLModel__QueryAssignment_1)
	{ after(grammarAccess.getSkiQLModelAccess().getQueryAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityTypeQuery__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityTypeQuery__Group__0__Impl
	rule__EntityTypeQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeQuery__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityTypeQueryAccess().getSchemaQueryAction_0()); }
	()
	{ after(grammarAccess.getEntityTypeQueryAccess().getSchemaQueryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeQuery__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityTypeQuery__Group__1__Impl
	rule__EntityTypeQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeQuery__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityTypeQueryAccess().getENTITYKeyword_1()); }
	'ENTITY'
	{ after(grammarAccess.getEntityTypeQueryAccess().getENTITYKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeQuery__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityTypeQuery__Group__2__Impl
	rule__EntityTypeQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeQuery__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityTypeQueryAccess().getSchemaSpecAssignment_2()); }
	(rule__EntityTypeQuery__SchemaSpecAssignment_2)
	{ after(grammarAccess.getEntityTypeQueryAccess().getSchemaSpecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeQuery__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityTypeQuery__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeQuery__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityTypeQueryAccess().getOperationAssignment_3()); }
	(rule__EntityTypeQuery__OperationAssignment_3)?
	{ after(grammarAccess.getEntityTypeQueryAccess().getOperationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipTypeQuery__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipTypeQuery__Group__0__Impl
	rule__RelationshipTypeQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeQuery__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeQueryAccess().getSchemaQueryAction_0()); }
	()
	{ after(grammarAccess.getRelationshipTypeQueryAccess().getSchemaQueryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeQuery__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipTypeQuery__Group__1__Impl
	rule__RelationshipTypeQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeQuery__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeQueryAccess().getRELKeyword_1()); }
	'REL'
	{ after(grammarAccess.getRelationshipTypeQueryAccess().getRELKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeQuery__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipTypeQuery__Group__2__Impl
	rule__RelationshipTypeQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeQuery__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeQueryAccess().getSchemaSpecAssignment_2()); }
	(rule__RelationshipTypeQuery__SchemaSpecAssignment_2)
	{ after(grammarAccess.getRelationshipTypeQueryAccess().getSchemaSpecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeQuery__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipTypeQuery__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeQuery__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeQueryAccess().getOperationAssignment_3()); }
	(rule__RelationshipTypeQuery__OperationAssignment_3)?
	{ after(grammarAccess.getRelationshipTypeQueryAccess().getOperationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnyQuery__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnyQuery__Group__0__Impl
	rule__AnyQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyQuery__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnyQueryAccess().getSchemaQueryAction_0()); }
	()
	{ after(grammarAccess.getAnyQueryAccess().getSchemaQueryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyQuery__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnyQuery__Group__1__Impl
	rule__AnyQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyQuery__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnyQueryAccess().getANYKeyword_1()); }
	'ANY'
	{ after(grammarAccess.getAnyQueryAccess().getANYKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyQuery__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnyQuery__Group__2__Impl
	rule__AnyQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyQuery__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnyQueryAccess().getSchemaSpecAssignment_2()); }
	(rule__AnyQuery__SchemaSpecAssignment_2)
	{ after(grammarAccess.getAnyQueryAccess().getSchemaSpecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyQuery__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnyQuery__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyQuery__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnyQueryAccess().getOperationAssignment_3()); }
	(rule__AnyQuery__OperationAssignment_3)?
	{ after(grammarAccess.getAnyQueryAccess().getOperationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeysSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeysSpec__Group__0__Impl
	rule__KeysSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeysSpecAccess().getKeysSpecAction_0()); }
	()
	{ after(grammarAccess.getKeysSpecAccess().getKeysSpecAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeysSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeysSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeysSpecAccess().getKEYSKeyword_1()); }
	'KEYS'
	{ after(grammarAccess.getKeysSpecAccess().getKEYSKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipTypeSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipTypeSpec__Group__0__Impl
	rule__RelationshipTypeSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeSpecAccess().getRelationshipTypeSpecAction_0()); }
	()
	{ after(grammarAccess.getRelationshipTypeSpecAccess().getRelationshipTypeSpecAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipTypeSpec__Group__1__Impl
	rule__RelationshipTypeSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeSpecAccess().getNameAssignment_1()); }
	(rule__RelationshipTypeSpec__NameAssignment_1)
	{ after(grammarAccess.getRelationshipTypeSpecAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipTypeSpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeSpecAccess().getVariationFilterAssignment_2()); }
	(rule__RelationshipTypeSpec__VariationFilterAssignment_2)?
	{ after(grammarAccess.getRelationshipTypeSpecAccess().getVariationFilterAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SchemaTypeSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SchemaTypeSpec__Group__0__Impl
	rule__SchemaTypeSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaTypeSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaTypeSpecAccess().getSchemaSpecAction_0()); }
	()
	{ after(grammarAccess.getSchemaTypeSpecAccess().getSchemaSpecAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaTypeSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SchemaTypeSpec__Group__1__Impl
	rule__SchemaTypeSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaTypeSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaTypeSpecAccess().getNameAssignment_1()); }
	(rule__SchemaTypeSpec__NameAssignment_1)
	{ after(grammarAccess.getSchemaTypeSpecAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaTypeSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SchemaTypeSpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaTypeSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaTypeSpecAccess().getVariationFilterAssignment_2()); }
	(rule__SchemaTypeSpec__VariationFilterAssignment_2)?
	{ after(grammarAccess.getSchemaTypeSpecAccess().getVariationFilterAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntitySpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntitySpec__Group__0__Impl
	rule__EntitySpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitySpecAccess().getEntitySpecAction_0()); }
	()
	{ after(grammarAccess.getEntitySpecAccess().getEntitySpecAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntitySpec__Group__1__Impl
	rule__EntitySpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitySpecAccess().getNameAssignment_1()); }
	(rule__EntitySpec__NameAssignment_1)
	{ after(grammarAccess.getEntitySpecAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntitySpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitySpecAccess().getVariationFilterAssignment_2()); }
	(rule__EntitySpec__VariationFilterAssignment_2)?
	{ after(grammarAccess.getEntitySpecAccess().getVariationFilterAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceEntitySpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceEntitySpec__Group__0__Impl
	rule__ReferenceEntitySpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceEntitySpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceEntitySpecAccess().getEntitySpecAction_0()); }
	()
	{ after(grammarAccess.getReferenceEntitySpecAccess().getEntitySpecAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceEntitySpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceEntitySpec__Group__1__Impl
	rule__ReferenceEntitySpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceEntitySpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceEntitySpecAccess().getNameAssignment_1()); }
	(rule__ReferenceEntitySpec__NameAssignment_1)
	{ after(grammarAccess.getReferenceEntitySpecAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceEntitySpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceEntitySpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceEntitySpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceEntitySpecAccess().getVariationFilterAssignment_2()); }
	(rule__ReferenceEntitySpec__VariationFilterAssignment_2)?
	{ after(grammarAccess.getReferenceEntitySpecAccess().getVariationFilterAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipQuery__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipQuery__Group__0__Impl
	rule__RelationshipQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipQueryAccess().getRelationshipQueryAction_0()); }
	()
	{ after(grammarAccess.getRelationshipQueryAccess().getRelationshipQueryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipQuery__Group__1__Impl
	rule__RelationshipQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipQueryAccess().getFROMKeyword_1()); }
	'FROM'
	{ after(grammarAccess.getRelationshipQueryAccess().getFROMKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipQuery__Group__2__Impl
	rule__RelationshipQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipQueryAccess().getFromAssignment_2()); }
	(rule__RelationshipQuery__FromAssignment_2)
	{ after(grammarAccess.getRelationshipQueryAccess().getFromAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipQuery__Group__3__Impl
	rule__RelationshipQuery__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipQueryAccess().getTOKeyword_3()); }
	'TO'
	{ after(grammarAccess.getRelationshipQueryAccess().getTOKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipQuery__Group__4__Impl
	rule__RelationshipQuery__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipQueryAccess().getAlternatives_4()); }
	(rule__RelationshipQuery__Alternatives_4)
	{ after(grammarAccess.getRelationshipQueryAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipQuery__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipQueryAccess().getGroup_5()); }
	(rule__RelationshipQuery__Group_5__0)*
	{ after(grammarAccess.getRelationshipQueryAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipQuery__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipQuery__Group_5__0__Impl
	rule__RelationshipQuery__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipQueryAccess().getCommaKeyword_5_0()); }
	(',')
	{ after(grammarAccess.getRelationshipQueryAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipQuery__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipQueryAccess().getAlternatives_5_1()); }
	(rule__RelationshipQuery__Alternatives_5_1)
	{ after(grammarAccess.getRelationshipQueryAccess().getAlternatives_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NestedRelationshipQuery__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedRelationshipQuery__Group__0__Impl
	rule__NestedRelationshipQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedRelationshipQueryAccess().getRelationshipQueryAction_0()); }
	()
	{ after(grammarAccess.getNestedRelationshipQueryAccess().getRelationshipQueryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedRelationshipQuery__Group__1__Impl
	rule__NestedRelationshipQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedRelationshipQueryAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getNestedRelationshipQueryAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedRelationshipQuery__Group__2__Impl
	rule__NestedRelationshipQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedRelationshipQueryAccess().getFROMKeyword_2()); }
	('FROM')?
	{ after(grammarAccess.getNestedRelationshipQueryAccess().getFROMKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedRelationshipQuery__Group__3__Impl
	rule__NestedRelationshipQuery__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedRelationshipQueryAccess().getFromAssignment_3()); }
	(rule__NestedRelationshipQuery__FromAssignment_3)
	{ after(grammarAccess.getNestedRelationshipQueryAccess().getFromAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedRelationshipQuery__Group__4__Impl
	rule__NestedRelationshipQuery__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedRelationshipQueryAccess().getTOKeyword_4()); }
	'TO'
	{ after(grammarAccess.getNestedRelationshipQueryAccess().getTOKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedRelationshipQuery__Group__5__Impl
	rule__NestedRelationshipQuery__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedRelationshipQueryAccess().getAlternatives_5()); }
	(rule__NestedRelationshipQuery__Alternatives_5)
	{ after(grammarAccess.getNestedRelationshipQueryAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedRelationshipQuery__Group__6__Impl
	rule__NestedRelationshipQuery__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedRelationshipQueryAccess().getGroup_6()); }
	(rule__NestedRelationshipQuery__Group_6__0)*
	{ after(grammarAccess.getNestedRelationshipQueryAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedRelationshipQuery__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedRelationshipQueryAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getNestedRelationshipQueryAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NestedRelationshipQuery__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedRelationshipQuery__Group_6__0__Impl
	rule__NestedRelationshipQuery__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedRelationshipQueryAccess().getCommaKeyword_6_0()); }
	(',')
	{ after(grammarAccess.getNestedRelationshipQueryAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedRelationshipQuery__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedRelationshipQueryAccess().getAlternatives_6_1()); }
	(rule__NestedRelationshipQuery__Alternatives_6_1)
	{ after(grammarAccess.getNestedRelationshipQueryAccess().getAlternatives_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipSpec__Group__0__Impl
	rule__RelationshipSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipSpecAccess().getRelationshipSpecAction_0()); }
	()
	{ after(grammarAccess.getRelationshipSpecAccess().getRelationshipSpecAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipSpec__Group__1__Impl
	rule__RelationshipSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipSpecAccess().getTargetExpressionAssignment_1()); }
	(rule__RelationshipSpec__TargetExpressionAssignment_1)
	{ after(grammarAccess.getRelationshipSpecAccess().getTargetExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipSpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipSpecAccess().getRelationSpecAssignment_2()); }
	(rule__RelationshipSpec__RelationSpecAssignment_2)?
	{ after(grammarAccess.getRelationshipSpecAccess().getRelationSpecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationSpec__Group__0__Impl
	rule__RelationSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationSpecAccess().getRelationSpecAction_0()); }
	()
	{ after(grammarAccess.getRelationSpecAccess().getRelationSpecAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationSpec__Group__1__Impl
	rule__RelationSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationSpecAccess().getANYKeyword_1()); }
	'ANY'
	{ after(grammarAccess.getRelationSpecAccess().getANYKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationSpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationSpecAccess().getNameAssignment_2()); }
	(rule__RelationSpec__NameAssignment_2)
	{ after(grammarAccess.getRelationSpecAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceSpec__Group__0__Impl
	rule__ReferenceSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceSpecAccess().getReferenceSpecAction_0()); }
	()
	{ after(grammarAccess.getReferenceSpecAccess().getReferenceSpecAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceSpec__Group__1__Impl
	rule__ReferenceSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceSpecAccess().getREFKeyword_1()); }
	'REF'
	{ after(grammarAccess.getReferenceSpecAccess().getREFKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceSpec__Group__2__Impl
	rule__ReferenceSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceSpecAccess().getNameAssignment_2()); }
	(rule__ReferenceSpec__NameAssignment_2)?
	{ after(grammarAccess.getReferenceSpecAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceSpec__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceSpecAccess().getVariationFilterAssignment_3()); }
	(rule__ReferenceSpec__VariationFilterAssignment_3)?
	{ after(grammarAccess.getReferenceSpecAccess().getVariationFilterAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AggregationSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationSpec__Group__0__Impl
	rule__AggregationSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationSpecAccess().getAggregationSpecAction_0()); }
	()
	{ after(grammarAccess.getAggregationSpecAccess().getAggregationSpecAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationSpec__Group__1__Impl
	rule__AggregationSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationSpecAccess().getAGGRKeyword_1()); }
	'AGGR'
	{ after(grammarAccess.getAggregationSpecAccess().getAGGRKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregationSpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationSpecAccess().getNameAssignment_2()); }
	(rule__AggregationSpec__NameAssignment_2)?
	{ after(grammarAccess.getAggregationSpecAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndirectRelationshipSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndirectRelationshipSpec__Group__0__Impl
	rule__IndirectRelationshipSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectRelationshipSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndirectRelationshipSpecAccess().getRelationshipSpecAction_0()); }
	()
	{ after(grammarAccess.getIndirectRelationshipSpecAccess().getRelationshipSpecAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectRelationshipSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndirectRelationshipSpec__Group__1__Impl
	rule__IndirectRelationshipSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectRelationshipSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndirectRelationshipSpecAccess().getIndirectAssignment_1()); }
	(rule__IndirectRelationshipSpec__IndirectAssignment_1)
	{ after(grammarAccess.getIndirectRelationshipSpecAccess().getIndirectAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectRelationshipSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndirectRelationshipSpec__Group__2__Impl
	rule__IndirectRelationshipSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectRelationshipSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndirectRelationshipSpecAccess().getTargetExpressionAssignment_2()); }
	(rule__IndirectRelationshipSpec__TargetExpressionAssignment_2)
	{ after(grammarAccess.getIndirectRelationshipSpecAccess().getTargetExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectRelationshipSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndirectRelationshipSpec__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectRelationshipSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndirectRelationshipSpecAccess().getRelationSpecAssignment_3()); }
	(rule__IndirectRelationshipSpec__RelationSpecAssignment_3)?
	{ after(grammarAccess.getIndirectRelationshipSpecAccess().getRelationSpecAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndirectReferenceSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndirectReferenceSpec__Group__0__Impl
	rule__IndirectReferenceSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectReferenceSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndirectReferenceSpecAccess().getReferenceSpecAction_0()); }
	()
	{ after(grammarAccess.getIndirectReferenceSpecAccess().getReferenceSpecAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectReferenceSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndirectReferenceSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectReferenceSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndirectReferenceSpecAccess().getREFKeyword_1()); }
	'REF'
	{ after(grammarAccess.getIndirectReferenceSpecAccess().getREFKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndirectAggregationSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndirectAggregationSpec__Group__0__Impl
	rule__IndirectAggregationSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectAggregationSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndirectAggregationSpecAccess().getAggregationSpecAction_0()); }
	()
	{ after(grammarAccess.getIndirectAggregationSpecAccess().getAggregationSpecAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectAggregationSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndirectAggregationSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectAggregationSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndirectAggregationSpecAccess().getAGGRKeyword_1()); }
	'AGGR'
	{ after(grammarAccess.getIndirectAggregationSpecAccess().getAGGRKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipExpression__Group__0__Impl
	rule__RelationshipExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipExpressionAccess().getRelationshipExpressionAction_0()); }
	()
	{ after(grammarAccess.getRelationshipExpressionAccess().getRelationshipExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipExpressionAccess().getRelationshipQueryAssignment_1()); }
	(rule__RelationshipExpression__RelationshipQueryAssignment_1)
	{ after(grammarAccess.getRelationshipExpressionAccess().getRelationshipQueryAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityExpression__Group__0__Impl
	rule__EntityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityExpressionAccess().getEntityExpressionAction_0()); }
	()
	{ after(grammarAccess.getEntityExpressionAccess().getEntityExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityExpressionAccess().getEntitySpecAssignment_1()); }
	(rule__EntityExpression__EntitySpecAssignment_1)
	{ after(grammarAccess.getEntityExpressionAccess().getEntitySpecAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ToReferenceEntitySpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToReferenceEntitySpec__Group__0__Impl
	rule__ToReferenceEntitySpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ToReferenceEntitySpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToReferenceEntitySpecAccess().getEntitySpecAction_0()); }
	()
	{ after(grammarAccess.getToReferenceEntitySpecAccess().getEntitySpecAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToReferenceEntitySpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToReferenceEntitySpec__Group__1__Impl
	rule__ToReferenceEntitySpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ToReferenceEntitySpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToReferenceEntitySpecAccess().getNameAssignment_1()); }
	(rule__ToReferenceEntitySpec__NameAssignment_1)
	{ after(grammarAccess.getToReferenceEntitySpecAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToReferenceEntitySpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ToReferenceEntitySpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ToReferenceEntitySpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getToReferenceEntitySpecAccess().getVariationFilterAssignment_2()); }
	(rule__ToReferenceEntitySpec__VariationFilterAssignment_2)?
	{ after(grammarAccess.getToReferenceEntitySpecAccess().getVariationFilterAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceVariationFilter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceVariationFilter__Group__0__Impl
	rule__ReferenceVariationFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceVariationFilterAccess().getVariationFilterAction_0()); }
	()
	{ after(grammarAccess.getReferenceVariationFilterAccess().getVariationFilterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceVariationFilter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceVariationFilterAccess().getAlternatives_1()); }
	(rule__ReferenceVariationFilter__Alternatives_1)
	{ after(grammarAccess.getReferenceVariationFilterAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceVariationFilter__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceVariationFilter__Group_1_1__0__Impl
	rule__ReferenceVariationFilter__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceVariationFilterAccess().getLeftSquareBracketKeyword_1_1_0()); }
	'['
	{ after(grammarAccess.getReferenceVariationFilterAccess().getLeftSquareBracketKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceVariationFilter__Group_1_1__1__Impl
	rule__ReferenceVariationFilter__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceVariationFilterAccess().getGroup_1_1_1()); }
	(rule__ReferenceVariationFilter__Group_1_1_1__0)?
	{ after(grammarAccess.getReferenceVariationFilterAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceVariationFilter__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceVariationFilterAccess().getRightSquareBracketKeyword_1_1_2()); }
	']'
	{ after(grammarAccess.getReferenceVariationFilterAccess().getRightSquareBracketKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceVariationFilter__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceVariationFilter__Group_1_1_1__0__Impl
	rule__ReferenceVariationFilter__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceVariationFilterAccess().getPropertySpecsAssignment_1_1_1_0()); }
	(rule__ReferenceVariationFilter__PropertySpecsAssignment_1_1_1_0)
	{ after(grammarAccess.getReferenceVariationFilterAccess().getPropertySpecsAssignment_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceVariationFilter__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceVariationFilterAccess().getGroup_1_1_1_1()); }
	(rule__ReferenceVariationFilter__Group_1_1_1_1__0)*
	{ after(grammarAccess.getReferenceVariationFilterAccess().getGroup_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceVariationFilter__Group_1_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceVariationFilter__Group_1_1_1_1__0__Impl
	rule__ReferenceVariationFilter__Group_1_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__Group_1_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceVariationFilterAccess().getCommaKeyword_1_1_1_1_0()); }
	','
	{ after(grammarAccess.getReferenceVariationFilterAccess().getCommaKeyword_1_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__Group_1_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceVariationFilter__Group_1_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__Group_1_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceVariationFilterAccess().getPropertySpecsAssignment_1_1_1_1_1()); }
	(rule__ReferenceVariationFilter__PropertySpecsAssignment_1_1_1_1_1)
	{ after(grammarAccess.getReferenceVariationFilterAccess().getPropertySpecsAssignment_1_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferencePropertySpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferencePropertySpec__Group__0__Impl
	rule__ReferencePropertySpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePropertySpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferencePropertySpecAccess().getPropertySpecAction_0()); }
	()
	{ after(grammarAccess.getReferencePropertySpecAccess().getPropertySpecAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePropertySpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferencePropertySpec__Group__1__Impl
	rule__ReferencePropertySpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePropertySpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferencePropertySpecAccess().getNameAssignment_1()); }
	(rule__ReferencePropertySpec__NameAssignment_1)
	{ after(grammarAccess.getReferencePropertySpecAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePropertySpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferencePropertySpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePropertySpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferencePropertySpecAccess().getGroup_2()); }
	(rule__ReferencePropertySpec__Group_2__0)?
	{ after(grammarAccess.getReferencePropertySpecAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferencePropertySpec__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferencePropertySpec__Group_2__0__Impl
	rule__ReferencePropertySpec__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePropertySpec__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferencePropertySpecAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getReferencePropertySpecAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePropertySpec__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferencePropertySpec__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePropertySpec__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferencePropertySpecAccess().getTypeAssignment_2_1()); }
	(rule__ReferencePropertySpec__TypeAssignment_2_1)
	{ after(grammarAccess.getReferencePropertySpecAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariationFilter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariationFilter__Group__0__Impl
	rule__VariationFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationFilterAccess().getVariationFilterAction_0()); }
	()
	{ after(grammarAccess.getVariationFilterAccess().getVariationFilterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariationFilter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationFilterAccess().getAlternatives_1()); }
	(rule__VariationFilter__Alternatives_1)
	{ after(grammarAccess.getVariationFilterAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariationFilter__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariationFilter__Group_1_1__0__Impl
	rule__VariationFilter__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationFilterAccess().getLeftSquareBracketKeyword_1_1_0()); }
	'['
	{ after(grammarAccess.getVariationFilterAccess().getLeftSquareBracketKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariationFilter__Group_1_1__1__Impl
	rule__VariationFilter__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationFilterAccess().getGroup_1_1_1()); }
	(rule__VariationFilter__Group_1_1_1__0)?
	{ after(grammarAccess.getVariationFilterAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariationFilter__Group_1_1__2__Impl
	rule__VariationFilter__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationFilterAccess().getRightSquareBracketKeyword_1_1_2()); }
	']'
	{ after(grammarAccess.getVariationFilterAccess().getRightSquareBracketKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariationFilter__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationFilterAccess().getOnlyAssignment_1_1_3()); }
	(rule__VariationFilter__OnlyAssignment_1_1_3)?
	{ after(grammarAccess.getVariationFilterAccess().getOnlyAssignment_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariationFilter__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariationFilter__Group_1_1_1__0__Impl
	rule__VariationFilter__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationFilterAccess().getPropertySpecsAssignment_1_1_1_0()); }
	(rule__VariationFilter__PropertySpecsAssignment_1_1_1_0)
	{ after(grammarAccess.getVariationFilterAccess().getPropertySpecsAssignment_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariationFilter__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationFilterAccess().getGroup_1_1_1_1()); }
	(rule__VariationFilter__Group_1_1_1_1__0)*
	{ after(grammarAccess.getVariationFilterAccess().getGroup_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariationFilter__Group_1_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariationFilter__Group_1_1_1_1__0__Impl
	rule__VariationFilter__Group_1_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group_1_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationFilterAccess().getCommaKeyword_1_1_1_1_0()); }
	','
	{ after(grammarAccess.getVariationFilterAccess().getCommaKeyword_1_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group_1_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariationFilter__Group_1_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__Group_1_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariationFilterAccess().getPropertySpecsAssignment_1_1_1_1_1()); }
	(rule__VariationFilter__PropertySpecsAssignment_1_1_1_1_1)
	{ after(grammarAccess.getVariationFilterAccess().getPropertySpecsAssignment_1_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySpec__Group__0__Impl
	rule__PropertySpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySpecAccess().getPropertySpecAction_0()); }
	()
	{ after(grammarAccess.getPropertySpecAccess().getPropertySpecAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySpec__Group__1__Impl
	rule__PropertySpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySpecAccess().getNameAssignment_1()); }
	(rule__PropertySpec__NameAssignment_1)
	{ after(grammarAccess.getPropertySpecAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySpecAccess().getGroup_2()); }
	(rule__PropertySpec__Group_2__0)?
	{ after(grammarAccess.getPropertySpecAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySpec__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySpec__Group_2__0__Impl
	rule__PropertySpec__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySpec__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySpecAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getPropertySpecAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySpec__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySpec__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySpec__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySpecAccess().getTypeAssignment_2_1()); }
	(rule__PropertySpec__TypeAssignment_2_1)
	{ after(grammarAccess.getPropertySpecAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group__0__Impl
	rule__PrimitiveType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveTypeAction_0()); }
	()
	{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group__1__Impl
	rule__PrimitiveType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getTypeAssignment_1()); }
	(rule__PrimitiveType__TypeAssignment_1)
	{ after(grammarAccess.getPrimitiveTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getArrayAssignment_2()); }
	(rule__PrimitiveType__ArrayAssignment_2)?
	{ after(grammarAccess.getPrimitiveTypeAccess().getArrayAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group__0__Impl
	rule__RelationshipType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getRelationshipTypeAction_0()); }
	()
	{ after(grammarAccess.getRelationshipTypeAccess().getRelationshipTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group__1__Impl
	rule__RelationshipType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getRelationTypeAssignment_1()); }
	(rule__RelationshipType__RelationTypeAssignment_1)
	{ after(grammarAccess.getRelationshipTypeAccess().getRelationTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getTargetEntityNameAssignment_2()); }
	(rule__RelationshipType__TargetEntityNameAssignment_2)?
	{ after(grammarAccess.getRelationshipTypeAccess().getTargetEntityNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BeforeHistory__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeHistory__Group__0__Impl
	rule__BeforeHistory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeHistory__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeHistoryAccess().getBeforeAction_0()); }
	()
	{ after(grammarAccess.getBeforeHistoryAccess().getBeforeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeHistory__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeHistory__Group__1__Impl
	rule__BeforeHistory__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeHistory__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeHistoryAccess().getBEFOREKeyword_1()); }
	'BEFORE'
	{ after(grammarAccess.getBeforeHistoryAccess().getBEFOREKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeHistory__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeHistory__Group__2__Impl
	rule__BeforeHistory__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeHistory__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeHistoryAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getBeforeHistoryAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeHistory__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeHistory__Group__3__Impl
	rule__BeforeHistory__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeHistory__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeHistoryAccess().getDateTimeAssignment_3()); }
	(rule__BeforeHistory__DateTimeAssignment_3)
	{ after(grammarAccess.getBeforeHistoryAccess().getDateTimeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeHistory__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeHistory__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeHistory__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeHistoryAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getBeforeHistoryAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AfterHistory__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterHistory__Group__0__Impl
	rule__AfterHistory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterHistory__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterHistoryAccess().getAfterAction_0()); }
	()
	{ after(grammarAccess.getAfterHistoryAccess().getAfterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterHistory__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterHistory__Group__1__Impl
	rule__AfterHistory__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterHistory__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterHistoryAccess().getAFTERKeyword_1()); }
	'AFTER'
	{ after(grammarAccess.getAfterHistoryAccess().getAFTERKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterHistory__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterHistory__Group__2__Impl
	rule__AfterHistory__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterHistory__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterHistoryAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getAfterHistoryAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterHistory__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterHistory__Group__3__Impl
	rule__AfterHistory__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterHistory__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterHistoryAccess().getDateTimeAssignment_3()); }
	(rule__AfterHistory__DateTimeAssignment_3)
	{ after(grammarAccess.getAfterHistoryAccess().getDateTimeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterHistory__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterHistory__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterHistory__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterHistoryAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAfterHistoryAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BetweenHistory__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BetweenHistory__Group__0__Impl
	rule__BetweenHistory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenHistory__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBetweenHistoryAccess().getBetweenAction_0()); }
	()
	{ after(grammarAccess.getBetweenHistoryAccess().getBetweenAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenHistory__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BetweenHistory__Group__1__Impl
	rule__BetweenHistory__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenHistory__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBetweenHistoryAccess().getBETWEENKeyword_1()); }
	'BETWEEN'
	{ after(grammarAccess.getBetweenHistoryAccess().getBETWEENKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenHistory__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BetweenHistory__Group__2__Impl
	rule__BetweenHistory__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenHistory__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBetweenHistoryAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getBetweenHistoryAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenHistory__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BetweenHistory__Group__3__Impl
	rule__BetweenHistory__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenHistory__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBetweenHistoryAccess().getAfterDateTimeAssignment_3()); }
	(rule__BetweenHistory__AfterDateTimeAssignment_3)
	{ after(grammarAccess.getBetweenHistoryAccess().getAfterDateTimeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenHistory__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BetweenHistory__Group__4__Impl
	rule__BetweenHistory__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenHistory__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBetweenHistoryAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getBetweenHistoryAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenHistory__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BetweenHistory__Group__5__Impl
	rule__BetweenHistory__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenHistory__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBetweenHistoryAccess().getBeforeDateTimeAssignment_5()); }
	(rule__BetweenHistory__BeforeDateTimeAssignment_5)
	{ after(grammarAccess.getBetweenHistoryAccess().getBeforeDateTimeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenHistory__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BetweenHistory__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenHistory__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBetweenHistoryAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getBetweenHistoryAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateTime__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateTime__Group__0__Impl
	rule__DateTime__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateTimeAccess().getDateTimeAction_0()); }
	()
	{ after(grammarAccess.getDateTimeAccess().getDateTimeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateTime__Group__1__Impl
	rule__DateTime__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateTimeAccess().getYearAssignment_1()); }
	(rule__DateTime__YearAssignment_1)
	{ after(grammarAccess.getDateTimeAccess().getYearAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateTime__Group__2__Impl
	rule__DateTime__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateTimeAccess().getHyphenMinusKeyword_2()); }
	'-'
	{ after(grammarAccess.getDateTimeAccess().getHyphenMinusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateTime__Group__3__Impl
	rule__DateTime__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateTimeAccess().getMonthAssignment_3()); }
	(rule__DateTime__MonthAssignment_3)
	{ after(grammarAccess.getDateTimeAccess().getMonthAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateTime__Group__4__Impl
	rule__DateTime__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateTimeAccess().getHyphenMinusKeyword_4()); }
	'-'
	{ after(grammarAccess.getDateTimeAccess().getHyphenMinusKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateTime__Group__5__Impl
	rule__DateTime__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateTimeAccess().getDayAssignment_5()); }
	(rule__DateTime__DayAssignment_5)
	{ after(grammarAccess.getDateTimeAccess().getDayAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateTime__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateTimeAccess().getGroup_6()); }
	(rule__DateTime__Group_6__0)?
	{ after(grammarAccess.getDateTimeAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateTime__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateTime__Group_6__0__Impl
	rule__DateTime__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateTimeAccess().getHourAssignment_6_0()); }
	(rule__DateTime__HourAssignment_6_0)
	{ after(grammarAccess.getDateTimeAccess().getHourAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateTime__Group_6__1__Impl
	rule__DateTime__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateTimeAccess().getColonKeyword_6_1()); }
	':'
	{ after(grammarAccess.getDateTimeAccess().getColonKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateTime__Group_6__2__Impl
	rule__DateTime__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateTimeAccess().getMinutesAssignment_6_2()); }
	(rule__DateTime__MinutesAssignment_6_2)
	{ after(grammarAccess.getDateTimeAccess().getMinutesAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateTime__Group_6__3__Impl
	rule__DateTime__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateTimeAccess().getColonKeyword_6_3()); }
	':'
	{ after(grammarAccess.getDateTimeAccess().getColonKeyword_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateTime__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateTimeAccess().getSecondsAssignment_6_4()); }
	(rule__DateTime__SecondsAssignment_6_4)
	{ after(grammarAccess.getDateTimeAccess().getSecondsAssignment_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SkiQLModel__QueryAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSkiQLModelAccess().getQueryQueryParserRuleCall_1_0()); }
		ruleQuery
		{ after(grammarAccess.getSkiQLModelAccess().getQueryQueryParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeQuery__SchemaSpecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityTypeQueryAccess().getSchemaSpecEntitySpecParserRuleCall_2_0()); }
		ruleEntitySpec
		{ after(grammarAccess.getEntityTypeQueryAccess().getSchemaSpecEntitySpecParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeQuery__OperationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityTypeQueryAccess().getOperationOperationParserRuleCall_3_0()); }
		ruleOperation
		{ after(grammarAccess.getEntityTypeQueryAccess().getOperationOperationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeQuery__SchemaSpecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipTypeQueryAccess().getSchemaSpecRelationshipTypeSpecParserRuleCall_2_0()); }
		ruleRelationshipTypeSpec
		{ after(grammarAccess.getRelationshipTypeQueryAccess().getSchemaSpecRelationshipTypeSpecParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeQuery__OperationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipTypeQueryAccess().getOperationOperationParserRuleCall_3_0()); }
		ruleOperation
		{ after(grammarAccess.getRelationshipTypeQueryAccess().getOperationOperationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyQuery__SchemaSpecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnyQueryAccess().getSchemaSpecSchemaTypeSpecParserRuleCall_2_0()); }
		ruleSchemaTypeSpec
		{ after(grammarAccess.getAnyQueryAccess().getSchemaSpecSchemaTypeSpecParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyQuery__OperationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnyQueryAccess().getOperationOperationParserRuleCall_3_0()); }
		ruleOperation
		{ after(grammarAccess.getAnyQueryAccess().getOperationOperationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeSpec__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipTypeSpecAccess().getNameAlternatives_1_0()); }
		(rule__RelationshipTypeSpec__NameAlternatives_1_0)
		{ after(grammarAccess.getRelationshipTypeSpecAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTypeSpec__VariationFilterAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipTypeSpecAccess().getVariationFilterVariationFilterParserRuleCall_2_0()); }
		ruleVariationFilter
		{ after(grammarAccess.getRelationshipTypeSpecAccess().getVariationFilterVariationFilterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaTypeSpec__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaTypeSpecAccess().getNameAlternatives_1_0()); }
		(rule__SchemaTypeSpec__NameAlternatives_1_0)
		{ after(grammarAccess.getSchemaTypeSpecAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaTypeSpec__VariationFilterAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaTypeSpecAccess().getVariationFilterVariationFilterParserRuleCall_2_0()); }
		ruleVariationFilter
		{ after(grammarAccess.getSchemaTypeSpecAccess().getVariationFilterVariationFilterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySpec__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitySpecAccess().getNameAlternatives_1_0()); }
		(rule__EntitySpec__NameAlternatives_1_0)
		{ after(grammarAccess.getEntitySpecAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySpec__VariationFilterAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitySpecAccess().getVariationFilterVariationFilterParserRuleCall_2_0()); }
		ruleVariationFilter
		{ after(grammarAccess.getEntitySpecAccess().getVariationFilterVariationFilterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceEntitySpec__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceEntitySpecAccess().getNameAlternatives_1_0()); }
		(rule__ReferenceEntitySpec__NameAlternatives_1_0)
		{ after(grammarAccess.getReferenceEntitySpecAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceEntitySpec__VariationFilterAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceEntitySpecAccess().getVariationFilterReferenceVariationFilterParserRuleCall_2_0()); }
		ruleReferenceVariationFilter
		{ after(grammarAccess.getReferenceEntitySpecAccess().getVariationFilterReferenceVariationFilterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__FromAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipQueryAccess().getFromReferenceEntitySpecParserRuleCall_2_0()); }
		ruleReferenceEntitySpec
		{ after(grammarAccess.getRelationshipQueryAccess().getFromReferenceEntitySpecParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__ToAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipQueryAccess().getToRelationshipSpecParserRuleCall_4_0_0()); }
		ruleRelationshipSpec
		{ after(grammarAccess.getRelationshipQueryAccess().getToRelationshipSpecParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__ToAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipQueryAccess().getToIndirectRelationshipSpecParserRuleCall_4_1_0()); }
		ruleIndirectRelationshipSpec
		{ after(grammarAccess.getRelationshipQueryAccess().getToIndirectRelationshipSpecParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__ToAssignment_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipQueryAccess().getToRelationshipSpecParserRuleCall_5_1_0_0()); }
		ruleRelationshipSpec
		{ after(grammarAccess.getRelationshipQueryAccess().getToRelationshipSpecParserRuleCall_5_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipQuery__ToAssignment_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipQueryAccess().getToIndirectRelationshipSpecParserRuleCall_5_1_1_0()); }
		ruleIndirectRelationshipSpec
		{ after(grammarAccess.getRelationshipQueryAccess().getToIndirectRelationshipSpecParserRuleCall_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__FromAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedRelationshipQueryAccess().getFromReferenceEntitySpecParserRuleCall_3_0()); }
		ruleReferenceEntitySpec
		{ after(grammarAccess.getNestedRelationshipQueryAccess().getFromReferenceEntitySpecParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__ToAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedRelationshipQueryAccess().getToRelationshipSpecParserRuleCall_5_0_0()); }
		ruleRelationshipSpec
		{ after(grammarAccess.getNestedRelationshipQueryAccess().getToRelationshipSpecParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__ToAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedRelationshipQueryAccess().getToIndirectRelationshipSpecParserRuleCall_5_1_0()); }
		ruleIndirectRelationshipSpec
		{ after(grammarAccess.getNestedRelationshipQueryAccess().getToIndirectRelationshipSpecParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__ToAssignment_6_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedRelationshipQueryAccess().getToRelationshipSpecParserRuleCall_6_1_0_0()); }
		ruleRelationshipSpec
		{ after(grammarAccess.getNestedRelationshipQueryAccess().getToRelationshipSpecParserRuleCall_6_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedRelationshipQuery__ToAssignment_6_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedRelationshipQueryAccess().getToIndirectRelationshipSpecParserRuleCall_6_1_1_0()); }
		ruleIndirectRelationshipSpec
		{ after(grammarAccess.getNestedRelationshipQueryAccess().getToIndirectRelationshipSpecParserRuleCall_6_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__TargetExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipSpecAccess().getTargetExpressionTargetExpressionParserRuleCall_1_0()); }
		ruleTargetExpression
		{ after(grammarAccess.getRelationshipSpecAccess().getTargetExpressionTargetExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSpec__RelationSpecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipSpecAccess().getRelationSpecRelationTypeSpecParserRuleCall_2_0()); }
		ruleRelationTypeSpec
		{ after(grammarAccess.getRelationshipSpecAccess().getRelationSpecRelationTypeSpecParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSpec__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationSpecAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getRelationSpecAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceSpec__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceSpecAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getReferenceSpecAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceSpec__VariationFilterAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceSpecAccess().getVariationFilterVariationFilterParserRuleCall_3_0()); }
		ruleVariationFilter
		{ after(grammarAccess.getReferenceSpecAccess().getVariationFilterVariationFilterParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationSpec__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationSpecAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getAggregationSpecAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectRelationshipSpec__IndirectAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndirectRelationshipSpecAccess().getIndirectGreaterThanSignGreaterThanSignKeyword_1_0()); }
		(
			{ before(grammarAccess.getIndirectRelationshipSpecAccess().getIndirectGreaterThanSignGreaterThanSignKeyword_1_0()); }
			'>>'
			{ after(grammarAccess.getIndirectRelationshipSpecAccess().getIndirectGreaterThanSignGreaterThanSignKeyword_1_0()); }
		)
		{ after(grammarAccess.getIndirectRelationshipSpecAccess().getIndirectGreaterThanSignGreaterThanSignKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectRelationshipSpec__TargetExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndirectRelationshipSpecAccess().getTargetExpressionTargetExpressionParserRuleCall_2_0()); }
		ruleTargetExpression
		{ after(grammarAccess.getIndirectRelationshipSpecAccess().getTargetExpressionTargetExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectRelationshipSpec__RelationSpecAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndirectRelationshipSpecAccess().getRelationSpecIndirectRelationTypeSpecParserRuleCall_3_0()); }
		ruleIndirectRelationTypeSpec
		{ after(grammarAccess.getIndirectRelationshipSpecAccess().getRelationSpecIndirectRelationTypeSpecParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipExpression__RelationshipQueryAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipExpressionAccess().getRelationshipQueryNestedRelationshipQueryParserRuleCall_1_0()); }
		ruleNestedRelationshipQuery
		{ after(grammarAccess.getRelationshipExpressionAccess().getRelationshipQueryNestedRelationshipQueryParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityExpression__EntitySpecAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityExpressionAccess().getEntitySpecToReferenceEntitySpecParserRuleCall_1_0()); }
		ruleToReferenceEntitySpec
		{ after(grammarAccess.getEntityExpressionAccess().getEntitySpecToReferenceEntitySpecParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToReferenceEntitySpec__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getToReferenceEntitySpecAccess().getNameAlternatives_1_0()); }
		(rule__ToReferenceEntitySpec__NameAlternatives_1_0)
		{ after(grammarAccess.getToReferenceEntitySpecAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ToReferenceEntitySpec__VariationFilterAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getToReferenceEntitySpecAccess().getVariationFilterReferenceVariationFilterParserRuleCall_2_0()); }
		ruleReferenceVariationFilter
		{ after(grammarAccess.getToReferenceEntitySpecAccess().getVariationFilterReferenceVariationFilterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__PropertySpecsAssignment_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceVariationFilterAccess().getPropertySpecsReferencePropertySpecParserRuleCall_1_1_1_0_0()); }
		ruleReferencePropertySpec
		{ after(grammarAccess.getReferenceVariationFilterAccess().getPropertySpecsReferencePropertySpecParserRuleCall_1_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceVariationFilter__PropertySpecsAssignment_1_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceVariationFilterAccess().getPropertySpecsReferencePropertySpecParserRuleCall_1_1_1_1_1_0()); }
		ruleReferencePropertySpec
		{ after(grammarAccess.getReferenceVariationFilterAccess().getPropertySpecsReferencePropertySpecParserRuleCall_1_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePropertySpec__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferencePropertySpecAccess().getNameAlternatives_1_0()); }
		(rule__ReferencePropertySpec__NameAlternatives_1_0)
		{ after(grammarAccess.getReferencePropertySpecAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePropertySpec__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferencePropertySpecAccess().getTypePrimitiveTypeParserRuleCall_2_1_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getReferencePropertySpecAccess().getTypePrimitiveTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__PropertySpecsAssignment_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariationFilterAccess().getPropertySpecsPropertySpecParserRuleCall_1_1_1_0_0()); }
		rulePropertySpec
		{ after(grammarAccess.getVariationFilterAccess().getPropertySpecsPropertySpecParserRuleCall_1_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__PropertySpecsAssignment_1_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariationFilterAccess().getPropertySpecsPropertySpecParserRuleCall_1_1_1_1_1_0()); }
		rulePropertySpec
		{ after(grammarAccess.getVariationFilterAccess().getPropertySpecsPropertySpecParserRuleCall_1_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariationFilter__OnlyAssignment_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariationFilterAccess().getOnlyONLYKeyword_1_1_3_0()); }
		(
			{ before(grammarAccess.getVariationFilterAccess().getOnlyONLYKeyword_1_1_3_0()); }
			'ONLY'
			{ after(grammarAccess.getVariationFilterAccess().getOnlyONLYKeyword_1_1_3_0()); }
		)
		{ after(grammarAccess.getVariationFilterAccess().getOnlyONLYKeyword_1_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySpec__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertySpecAccess().getNameAlternatives_1_0()); }
		(rule__PropertySpec__NameAlternatives_1_0)
		{ after(grammarAccess.getPropertySpecAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySpec__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertySpecAccess().getTypeTypeParserRuleCall_2_1_0()); }
		ruleType
		{ after(grammarAccess.getPropertySpecAccess().getTypeTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getTypeTypeEnumEnumRuleCall_1_0()); }
		ruleTypeEnum
		{ after(grammarAccess.getPrimitiveTypeAccess().getTypeTypeEnumEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__ArrayAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_2_0()); }
		(
			{ before(grammarAccess.getPrimitiveTypeAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_2_0()); }
			'[]'
			{ after(grammarAccess.getPrimitiveTypeAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_2_0()); }
		)
		{ after(grammarAccess.getPrimitiveTypeAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__RelationTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipTypeAccess().getRelationTypeRelationshipTypeEnumEnumRuleCall_1_0()); }
		ruleRelationshipTypeEnum
		{ after(grammarAccess.getRelationshipTypeAccess().getRelationTypeRelationshipTypeEnumEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__TargetEntityNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipTypeAccess().getTargetEntityNameAlternatives_2_0()); }
		(rule__RelationshipType__TargetEntityNameAlternatives_2_0)
		{ after(grammarAccess.getRelationshipTypeAccess().getTargetEntityNameAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeHistory__DateTimeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeforeHistoryAccess().getDateTimeDateTimeParserRuleCall_3_0()); }
		ruleDateTime
		{ after(grammarAccess.getBeforeHistoryAccess().getDateTimeDateTimeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterHistory__DateTimeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAfterHistoryAccess().getDateTimeDateTimeParserRuleCall_3_0()); }
		ruleDateTime
		{ after(grammarAccess.getAfterHistoryAccess().getDateTimeDateTimeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenHistory__AfterDateTimeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBetweenHistoryAccess().getAfterDateTimeDateTimeParserRuleCall_3_0()); }
		ruleDateTime
		{ after(grammarAccess.getBetweenHistoryAccess().getAfterDateTimeDateTimeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BetweenHistory__BeforeDateTimeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBetweenHistoryAccess().getBeforeDateTimeDateTimeParserRuleCall_5_0()); }
		ruleDateTime
		{ after(grammarAccess.getBetweenHistoryAccess().getBeforeDateTimeDateTimeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__YearAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateTimeAccess().getYearINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getDateTimeAccess().getYearINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__MonthAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateTimeAccess().getMonthINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getDateTimeAccess().getMonthINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__DayAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateTimeAccess().getDayINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getDateTimeAccess().getDayINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__HourAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateTimeAccess().getHourINTTerminalRuleCall_6_0_0()); }
		RULE_INT
		{ after(grammarAccess.getDateTimeAccess().getHourINTTerminalRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__MinutesAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateTimeAccess().getMinutesINTTerminalRuleCall_6_2_0()); }
		RULE_INT
		{ after(grammarAccess.getDateTimeAccess().getMinutesINTTerminalRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTime__SecondsAssignment_6_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateTimeAccess().getSecondsINTTerminalRuleCall_6_4_0()); }
		RULE_INT
		{ after(grammarAccess.getDateTimeAccess().getSecondsINTTerminalRuleCall_6_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'*') ('a'..'z'|'A'..'Z'|'_'|'*'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
