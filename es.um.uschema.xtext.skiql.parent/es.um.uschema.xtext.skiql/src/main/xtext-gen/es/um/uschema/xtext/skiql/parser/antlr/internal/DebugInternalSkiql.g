/*
 * generated by Xtext 2.29.0
 */
grammar DebugInternalSkiql;

// Rule SkiQLModel
ruleSkiQLModel:
	ruleQuery
;

// Rule Query
ruleQuery:
	(
		ruleEntityTypeQuery
		    |
		ruleRelationshipTypeQuery
		    |
		ruleRelationshipQuery
		    |
		ruleAnyQuery
	)
;

// Rule EntityTypeQuery
ruleEntityTypeQuery:
	'ENTITY'
	ruleEntitySpec
	ruleOperation
	?
;

// Rule RelationshipTypeQuery
ruleRelationshipTypeQuery:
	'REL'
	ruleRelationshipTypeSpec
	ruleOperation
	?
;

// Rule AnyQuery
ruleAnyQuery:
	'ANY'
	ruleSchemaTypeSpec
	ruleOperation
	?
;

// Rule Operation
ruleOperation:
	(
		ruleKeysSpec
		    |
		ruleVersionHistory
	)
;

// Rule KeysSpec
ruleKeysSpec:
	'KEYS'
;

// Rule RelationshipTypeSpec
ruleRelationshipTypeSpec:
	(
		RULE_ID
		    |'*'
	)
	ruleVariationFilter
	?
;

// Rule SchemaTypeSpec
ruleSchemaTypeSpec:
	(
		RULE_ID
		    |'*'
	)
	ruleVariationFilter
	?
;

// Rule EntitySpec
ruleEntitySpec:
	(
		RULE_ID
		    |'*'
	)
	ruleVariationFilter
	?
;

// Rule ReferenceEntitySpec
ruleReferenceEntitySpec:
	(
		RULE_ID
		    |'*'
		    |
		'_'
	)
	ruleReferenceVariationFilter
	?
;

// Rule RelationshipQuery
ruleRelationshipQuery:
	'FROM'
	ruleReferenceEntitySpec
	'TO'
	(
		ruleRelationshipSpec
		    |
		(
			(ruleIndirectRelationshipSpec
			)=>
			ruleIndirectRelationshipSpec
		)
	)
	(
		(
			(',')=>
			','
		)
		(
			ruleRelationshipSpec
			    |
			(
				(ruleIndirectRelationshipSpec
				)=>
				ruleIndirectRelationshipSpec
			)
		)
	)*
;

// Rule NestedRelationshipQuery
ruleNestedRelationshipQuery:
	'{'
	'FROM'?
	ruleReferenceEntitySpec
	'TO'
	(
		ruleRelationshipSpec
		    |
		(
			(ruleIndirectRelationshipSpec
			)=>
			ruleIndirectRelationshipSpec
		)
	)
	(
		(
			(',')=>
			','
		)
		(
			ruleRelationshipSpec
			    |
			(
				(ruleIndirectRelationshipSpec
				)=>
				ruleIndirectRelationshipSpec
			)
		)
	)*
	'}'
;

// Rule RelationshipSpec
ruleRelationshipSpec:
	ruleTargetExpression
	(
		(ruleRelationTypeSpec
		)=>
		ruleRelationTypeSpec
	)?
;

// Rule RelationTypeSpec
ruleRelationTypeSpec:
	(
		ruleRelationSpec
		    |
		ruleReferenceSpec
		    |
		ruleAggregationSpec
	)
;

// Rule RelationSpec
ruleRelationSpec:
	'ANY'
	RULE_ID
;

// Rule ReferenceSpec
ruleReferenceSpec:
	'REF'
	RULE_ID
	?
	ruleVariationFilter
	?
;

// Rule AggregationSpec
ruleAggregationSpec:
	'AGGR'
	RULE_ID
	?
;

// Rule IndirectRelationshipSpec
ruleIndirectRelationshipSpec:
	'>>'
	ruleTargetExpression
	(
		(ruleIndirectRelationTypeSpec
		)=>
		ruleIndirectRelationTypeSpec
	)?
;

// Rule IndirectRelationTypeSpec
ruleIndirectRelationTypeSpec:
	(
		ruleIndirectReferenceSpec
		    |
		ruleIndirectAggregationSpec
	)
;

// Rule IndirectReferenceSpec
ruleIndirectReferenceSpec:
	'REF'
;

// Rule IndirectAggregationSpec
ruleIndirectAggregationSpec:
	'AGGR'
;

// Rule TargetExpression
ruleTargetExpression:
	(
		ruleRelationshipExpression
		    |
		ruleEntityExpression
	)
;

// Rule RelationshipExpression
ruleRelationshipExpression:
	ruleNestedRelationshipQuery
;

// Rule EntityExpression
ruleEntityExpression:
	ruleToReferenceEntitySpec
;

// Rule ToReferenceEntitySpec
ruleToReferenceEntitySpec:
	(
		RULE_ID
		    |'*'
		    |
		'_'
	)
	ruleReferenceVariationFilter
	?
;

// Rule ReferenceVariationFilter
ruleReferenceVariationFilter:
	(
		'[]'
		    |
		'['
		(
			ruleReferencePropertySpec
			(
				','
				ruleReferencePropertySpec
			)*
		)?
		']'
	)
;

// Rule ReferencePropertySpec
ruleReferencePropertySpec:
	(
		RULE_ID
		    |'*'
	)
	(
		':'
		rulePrimitiveType
	)?
;

// Rule VariationFilter
ruleVariationFilter:
	(
		'[]'
		    |
		'['
		(
			rulePropertySpec
			(
				','
				rulePropertySpec
			)*
		)?
		']'
		'ONLY'
		?
	)
;

// Rule PropertySpec
rulePropertySpec:
	(
		RULE_ID
		    |'*'
	)
	(
		':'
		ruleType
	)?
;

// Rule Type
ruleType:
	(
		rulePrimitiveType
		    |
		ruleRelationshipType
	)
;

// Rule PrimitiveType
rulePrimitiveType:
	ruleTypeEnum
	'[]'
	?
;

// Rule RelationshipType
ruleRelationshipType:
	ruleRelationshipTypeEnum
	(
		RULE_ID
		    |'*'
	)?
;

// Rule VersionHistory
ruleVersionHistory:
	(
		ruleBeforeHistory
		    |
		ruleAfterHistory
		    |
		ruleBetweenHistory
	)
;

// Rule BeforeHistory
ruleBeforeHistory:
	'BEFORE'
	'('
	ruleDateTime
	')'
;

// Rule AfterHistory
ruleAfterHistory:
	'AFTER'
	'('
	ruleDateTime
	')'
;

// Rule BetweenHistory
ruleBetweenHistory:
	'BETWEEN'
	'('
	ruleDateTime
	','
	ruleDateTime
	')'
;

// Rule DateTime
ruleDateTime:
	RULE_INT
	'-'
	RULE_INT
	'-'
	RULE_INT
	(
		RULE_INT
		':'
		RULE_INT
		':'
		RULE_INT
	)?
;

// Rule TypeEnum
ruleTypeEnum:
	(
		'string'
		    |
		'number'
		    |
		'boolean'
	)
;

// Rule RelationshipTypeEnum
ruleRelationshipTypeEnum:
	(
		'ANY'
		    |
		'REF'
		    |
		'AGGR'
	)
;

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'*') ('a'..'z'|'A'..'Z'|'_'|'*'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/' {skip();};

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')? {skip();};

RULE_WS : (' '|'\t'|'\r'|'\n')+ {skip();};

RULE_ANY_OTHER : .;
